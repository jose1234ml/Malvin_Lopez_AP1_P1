@page "/Aportes/Index"
@inject RegistroService RegistroService
@rendermode InteractiveServer

<PageTitle>Aportes</PageTitle>

<section class="container card shadow-lg rounded mt-4 p-0">
    <header class="bg-light py-4 px-4 position-relative border-bottom">
        <h4 class="m-0 text-center">Listado de Aportes</h4>
    </header>

    <div class="px-4 py-3 text-end">
        <a href="/Aportes/Crear" class="btn btn-success">
            <i class="bi bi-plus-square me-1"></i> Crear
        </a>
    </div>

    <div class="card-body pt-0">
        <div class="row mb-3">
            <div class="col-md-3">
                <label class="form-label fw-bold">Desde</label>
                <InputDate class="form-control" @bind-Value="FechaDesde" />
            </div>

            <div class="col-md-3">
                <label class="form-label fw-bold">Hasta</label>
                <InputDate class="form-control" @bind-Value="FechaHasta" />
            </div>

            <div class="col-md-3">
                <label class="form-label fw-bold">Filtrar por</label>
                <InputSelect class="form-select" @bind-Value="Filtro">
                    <option disabled selected value="">Seleccione una opción</option>
                    <option value="Id">ID</option>
                    <option value="Nombre">Nombre</option>
                </InputSelect>
            </div>

            <div class="col-md-3">
                <label class="form-label fw-bold">Valor</label>
                <div class="input-group">
                    <input class="form-control" @bind="ValorFiltro" placeholder="Buscar" />
                    <button class="btn btn-primary" @onclick="Buscar">
                        <i class="bi bi-search"></i>
                    </button>
                </div>
            </div>
        </div>

        <div class="table-responsive">
            <table class="table table-hover">
                <thead class="table-light">
                    <tr>
                        <th class="w-10">Id Aporte</th>
                        <th class="w-25">Nombre</th>
                        <th class="w-20">Fecha</th>
                        <th class="w-20 text-end">Dinero Aportado</th>
                        <th class="w-10 text-end">Modificar</th>
                    </tr>
                </thead>
                <tbody>
                    @if (aportes?.Any() == true)
                    {
                        @foreach (var aporte in aportes)
                        {
                            <tr>
                                <td>@aporte.Id </td>
                                <td>@aporte.Nombre</td>
                                <td>@aporte.Fecha.ToShortDateString()</td>
                                <td class="text-end">@aporte.DineroAportes.ToString("N2")</td>
                                <td class="text-end">
                                    <a class="btn btn-outline-warning btn-sm" href="/Aportes/Modificar/@aporte.Id">
                                        <i class="bi bi-pencil-square"></i>
                                    </a>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="5" class="text-center">No hay aportes registrados.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="d-flex justify-content-between mt-4">
            <div>
                <strong>Total de Registros:</strong> @aportes.Count
            </div>
            <div>
                <strong>Total Aportes:</strong> @aportes.Sum(a => a.DineroAportes).ToString("N2")
            </div>
        </div>
    </div>
</section>

@code {
    private List<RegistroAportes> aportes = new();
    private string Filtro { get; set; } = string.Empty;
    private string ValorFiltro { get; set; } = string.Empty;
    private DateTime? FechaDesde { get; set; }
    private DateTime? FechaHasta { get; set; }

    protected override async Task OnInitializedAsync()
    {
        aportes = await RegistroService.ObtenerRegistrosAsync();
    }

    private async Task Buscar()
    {
        var registros = await RegistroService.ObtenerRegistrosAsync();
        aportes = Filtrar.Aplicar(registros, Filtro, ValorFiltro, FechaDesde, FechaHasta);
    }
}